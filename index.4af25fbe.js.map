{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\"table\");\n    var tableBody = table.querySelector(\"tbody\");\n    var tableHeaders = table.querySelectorAll(\"th\");\n    var form = document.createElement(\"form\");\n    var notification = document.createElement(\"div\");\n    var sortOrder = 1;\n    var editedCell = false;\n    notification.setAttribute(\"data-qa\", \"notification\");\n    form.className = \"new-employee-form\";\n    var formInputs = [\n        {\n            label: \"Name\",\n            type: \"text\",\n            fieldName: \"name\",\n            qa: \"name\"\n        },\n        {\n            label: \"position\",\n            type: \"text\",\n            fieldName: \"position\",\n            qa: \"position\"\n        },\n        {\n            label: \"Office\",\n            type: \"select\",\n            fieldName: \"office\",\n            qa: \"office\",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            label: \"age\",\n            type: \"number\",\n            fieldName: \"age\",\n            qa: \"age\"\n        },\n        {\n            label: \"salary\",\n            type: \"number\",\n            fieldName: \"salary\",\n            qa: \"salary\"\n        }\n    ];\n    var createForm = function(param) {\n        var label = param.label, type = param.type, fieldName = param.fieldName, qa = param.qa, options = param.options;\n        var inputLabel = document.createElement(\"label\");\n        var input = type === \"select\" ? document.createElement(\"select\") : document.createElement(\"input\");\n        input.name = fieldName;\n        if (type === \"select\") options.forEach(function(elem) {\n            var option = document.createElement(\"option\");\n            option.value = elem;\n            option.textContent = elem;\n            input.append(option);\n        });\n        else input.type = type;\n        if (fieldName === \"name\") {\n            input.setAttribute(\"minLength\", \"4\");\n            input.setAttribute(\"maxLength\", \"50\");\n            input.setAttribute(\"placeholder\", \"length between 4-50\");\n        }\n        if (fieldName === \"age\") {\n            input.setAttribute(\"min\", \"18\");\n            input.setAttribute(\"max\", \"90\");\n            input.setAttribute(\"placeholder\", \"age between 18-90\");\n        }\n        inputLabel.setAttribute(\"data-qa\", qa);\n        inputLabel.innerHTML = \"\".concat(label, \": \");\n        inputLabel.append(input);\n        form.append(inputLabel);\n        return input;\n    };\n    function showNotification(type, message) {\n        notification.className = type;\n        notification.textContent = message;\n    }\n    formInputs.forEach(createForm);\n    document.body.appendChild(form);\n    var submitButton = document.createElement(\"button\");\n    submitButton.className = \"button\";\n    submitButton.textContent = \"Save to table\";\n    submitButton.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        employeeValidation();\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            notification.remove();\n        }, 3000);\n    });\n    form.append(submitButton);\n    function addEmployeeToTable(employee) {\n        var newRow = document.createElement(\"tr\");\n        Object.values(employee).forEach(function(value) {\n            var cell = document.createElement(\"td\");\n            cell.textContent = value;\n            newRow.append(cell);\n        });\n        tableBody.append(newRow);\n    }\n    function employeeValidation() {\n        var newEmployee = {};\n        var isCorrect = true;\n        formInputs.forEach(function(param) {\n            var fieldName = param.fieldName;\n            var input = form.querySelector(\"[name='\".concat(fieldName, \"']\"));\n            newEmployee[fieldName] = fieldName === \"salary\" ? \"$\".concat(parseFloat(input.value).toLocaleString(\"en-US\")) : input.value;\n            if (input.value.trim() === \"\") {\n                isCorrect = false;\n                showNotification(\"error\", \"all fields required\");\n            }\n            if (!input.checkValidity()) {\n                isCorrect = false;\n                showNotification(\"error\", \"check values in inputs \");\n            }\n        });\n        if (isCorrect) {\n            addEmployeeToTable(newEmployee);\n            showNotification(\"success\", \"success, new Person in our team!!\");\n            form.reset();\n        }\n    }\n    tableBody.addEventListener(\"dblclick\", cellRename);\n    function save(cell, input) {\n        cell.textContent = input.value;\n        input.remove();\n        editedCell = false;\n    }\n    function cellRename(e) {\n        var cell = e.target.closest(\"td\");\n        var input = document.createElement(\"input\");\n        var prevValue = cell.textContent;\n        if (cell && !editedCell) {\n            editedCell = true;\n            input.addEventListener(\"blur\", function() {\n                save(cell, input);\n            });\n            input.addEventListener(\"keydown\", function(ev) {\n                if (ev.key === \"Enter\") save(cell, input);\n            });\n            input.value = prevValue;\n            input.className = \"cell-input\";\n            input.style.width = \"\".concat(cell.getBoundingClientRect().width - 36, \"px\");\n            cell.textContent = \"\";\n            cell.appendChild(input);\n        }\n    }\n    tableHeaders.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            return sortAb(index);\n        });\n    });\n    function sortAb(index) {\n        var rows = Array.from(document.querySelectorAll(\"table tbody tr\"));\n        sortOrder = -sortOrder;\n        rows.sort(function(a, b) {\n            var parseValue = function(value) {\n                return parseFloat(value.replace(/[$,]/g, \"\")) || value;\n            };\n            var aValue = parseValue(a.children[index].textContent);\n            var bValue = parseValue(b.children[index].textContent);\n            if (aValue < bValue) return 1 * sortOrder;\n            if (aValue > bValue) return -1 * sortOrder;\n            else return 0;\n        });\n        tableBody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tableBody.appendChild(row);\n        });\n    }\n    tableBody.addEventListener(\"click\", function(e) {\n        var clickedRow = e.target.closest(\"tr\");\n        if (clickedRow) {\n            var index = Array.from(tableBody.children).indexOf(clickedRow);\n            selectRow(index);\n        }\n    });\n    function selectRow(index) {\n        var tableBodyRows = Array.from(document.querySelectorAll(\"table tbody tr\"));\n        var selectedRow = tableBodyRows[index];\n        if (selectedRow) {\n            tableBodyRows.forEach(function(row) {\n                return row.classList.remove(\"active\");\n            });\n            selectedRow.className = \"active\";\n        }\n    }\n});\n\n//# sourceMappingURL=index.4af25fbe.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const table = document.querySelector('table');\n  const tableBody = table.querySelector('tbody');\n  const tableHeaders = table.querySelectorAll('th');\n  const form = document.createElement('form');\n  const notification = document.createElement('div');\n\n  let sortOrder = 1;\n  let editedCell = false;\n\n  notification.setAttribute('data-qa', 'notification');\n  form.className = 'new-employee-form';\n\n  const formInputs = [\n    {\n      label: 'Name',\n      type: 'text',\n      fieldName: 'name',\n      qa: 'name',\n    },\n    {\n      label: 'position',\n      type: 'text',\n      fieldName: 'position',\n      qa: 'position',\n    },\n    {\n      label: 'Office',\n      type: 'select',\n      fieldName: 'office',\n      qa: 'office',\n      options: ['Tokyo', 'Singapore', 'London', 'New York',\n        'Edinburgh', 'San Francisco'],\n    },\n    {\n      label: 'age',\n      type: 'number',\n      fieldName: 'age',\n      qa: 'age',\n    },\n    {\n      label: 'salary',\n      type: 'number',\n      fieldName: 'salary',\n      qa: 'salary',\n    },\n  ];\n\n  const createForm = ({ label, type, fieldName, qa, options }) => {\n    const inputLabel = document.createElement('label');\n    const input = type === 'select'\n      ? document.createElement('select')\n      : document.createElement('input');\n\n    input.name = fieldName;\n\n    if (type === 'select') {\n      options.forEach((elem) => {\n        const option = document.createElement('option');\n\n        option.value = elem;\n        option.textContent = elem;\n\n        input.append(option);\n      });\n    } else {\n      input.type = type;\n    }\n\n    if (fieldName === 'name') {\n      input.setAttribute('minLength', '4');\n      input.setAttribute('maxLength', '50');\n      input.setAttribute('placeholder', 'length between 4-50');\n    }\n\n    if (fieldName === 'age') {\n      input.setAttribute('min', '18');\n      input.setAttribute('max', '90');\n      input.setAttribute('placeholder', 'age between 18-90');\n    }\n\n    inputLabel.setAttribute('data-qa', qa);\n    inputLabel.innerHTML = `${label}: `;\n    inputLabel.append(input);\n    form.append(inputLabel);\n\n    return input;\n  };\n\n  function showNotification(type, message) {\n    notification.className = type;\n    notification.textContent = message;\n  }\n\n  formInputs.forEach(createForm);\n\n  document.body.appendChild(form);\n\n  const submitButton = document.createElement('button');\n\n  submitButton.className = 'button';\n  submitButton.textContent = 'Save to table';\n\n  submitButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    employeeValidation();\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  });\n  form.append(submitButton);\n\n  function addEmployeeToTable(employee) {\n    const newRow = document.createElement('tr');\n\n    Object.values(employee).forEach((value) => {\n      const cell = document.createElement('td');\n\n      cell.textContent = value;\n      newRow.append(cell);\n    });\n    tableBody.append(newRow);\n  }\n\n  function employeeValidation() {\n    const newEmployee = {};\n    let isCorrect = true;\n\n    formInputs.forEach(({ fieldName }) => {\n      const input = form.querySelector(`[name='${fieldName}']`);\n\n      newEmployee[fieldName] = fieldName === 'salary'\n        ? `$${parseFloat(input.value).toLocaleString(\n          'en-US')}`\n        : input.value;\n\n      if (input.value.trim() === '') {\n        isCorrect = false;\n\n        showNotification('error',\n          'all fields required');\n      }\n\n      if (!input.checkValidity()) {\n        isCorrect = false;\n\n        showNotification('error',\n          'check values in inputs ');\n      }\n    });\n\n    if (isCorrect) {\n      addEmployeeToTable(newEmployee);\n      showNotification('success', 'success, new Person in our team!!');\n      form.reset();\n    }\n  }\n\n  tableBody.addEventListener('dblclick', cellRename);\n\n  function save(cell, input) {\n    cell.textContent = input.value;\n    input.remove();\n    editedCell = false;\n  }\n\n  function cellRename(e) {\n    const cell = e.target.closest('td');\n    const input = document.createElement('input');\n    const prevValue = cell.textContent;\n\n    if (cell && !editedCell) {\n      editedCell = true;\n\n      input.addEventListener('blur', function() {\n        save(cell, input);\n      });\n\n      input.addEventListener('keydown', function(ev) {\n        if (ev.key === 'Enter') {\n          save(cell, input);\n        }\n      });\n\n      input.value = prevValue;\n      input.className = 'cell-input';\n      input.style.width = `${cell.getBoundingClientRect().width - 36}px`;\n      cell.textContent = '';\n      cell.appendChild(input);\n    }\n  }\n\n  tableHeaders.forEach((header, index) => {\n    header.addEventListener('click', () => sortAb(index));\n  });\n\n  function sortAb(index) {\n    const rows = Array.from(document.querySelectorAll('table tbody tr'));\n\n    sortOrder = -sortOrder;\n\n    rows.sort((a, b) => {\n      const parseValue = (value) => {\n        return parseFloat(value.replace(/[$,]/g, '')) || value;\n      };\n\n      const aValue = parseValue(a.children[index].textContent);\n      const bValue = parseValue(b.children[index].textContent);\n\n      if (aValue < bValue) {\n        return 1 * sortOrder;\n      }\n\n      if (aValue > bValue) {\n        return -1 * sortOrder;\n      } else {\n        return 0;\n      }\n    });\n    tableBody.innerHTML = '';\n    rows.forEach(row => tableBody.appendChild(row));\n  }\n\n  tableBody.addEventListener('click', function(e) {\n    const clickedRow = e.target.closest('tr');\n\n    if (clickedRow) {\n      const index = Array.from(tableBody.children).indexOf(clickedRow);\n\n      selectRow(index);\n    }\n  });\n\n  function selectRow(index) {\n    const tableBodyRows = Array.from(\n      document.querySelectorAll('table tbody tr'));\n\n    const selectedRow = tableBodyRows[index];\n\n    if (selectedRow) {\n      tableBodyRows.forEach(row => row.classList.remove('active'));\n      selectedRow.className = 'active';\n    }\n  }\n});\n"],"names":["document","addEventListener","table","querySelector","tableBody","tableHeaders","querySelectorAll","form","createElement","notification","sortOrder","editedCell","setAttribute","className","formInputs","label","type","fieldName","qa","options","showNotification","message","textContent","forEach","param","inputLabel","input","name","elem","option","value","append","innerHTML","concat","body","appendChild","submitButton","save","cell","remove","e","newRow","newEmployee","isCorrect","preventDefault","parseFloat","toLocaleString","trim","checkValidity","Object","values","reset","setTimeout","target","closest","prevValue","ev","key","style","width","getBoundingClientRect","header","index","rows","Array","from","sort","a","b","parseValue","replace","aValue","children","bValue","row","tableBodyRows","selectedRow","clickedRow","indexOf","classList"],"version":3,"file":"index.4af25fbe.js.map"}